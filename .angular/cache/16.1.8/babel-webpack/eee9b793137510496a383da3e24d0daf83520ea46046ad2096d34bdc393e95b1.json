{"ast":null,"code":"import { Recipes } from \"./recipes.model\";\nimport { Ingredients } from \"../shared/ingredients.model\";\nimport { Subject } from \"rxjs/Subject\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shopping-list/shopping-list.service\";\nclass RecipesService {\n  constructor(serviceShopping) {\n    this.serviceShopping = serviceShopping;\n    this.recipesChanged = new Subject();\n    this.recipes = [new Recipes('Burger Meat', 'this is burger with chips', 'https://bakeitwithlove.com/wp-content/uploads/2021/05/McDonalds-The-Travis-Scott-Burger-sq.jpg', [new Ingredients('Meat', 1), new Ingredients('Bread', 2)]), new Recipes('Launch', 'The launch day', 'https://cdn.loveandlemons.com/wp-content/uploads/2020/03/pantry-recipes-2.jpg', [new Ingredients('Salad', 2), new Ingredients('Meat', 1), new Ingredients('chips', 20)])];\n  }\n  getRecipes() {\n    return this.recipes.slice();\n  }\n  getIdRecipe(index) {\n    return this.recipes[index];\n  }\n  addIngredintToShoppingList(ingredients) {\n    this.serviceShopping.addedShoppingList(ingredients);\n  }\n  addRecipe(recipe) {\n    this.recipes.push(recipe);\n    this.recipesChanged.next(this.recipes.slice());\n  }\n  updateRecipe(index, newRecipe) {\n    this.recipes[index] = newRecipe;\n    this.recipesChanged.next(this.recipes.slice());\n  }\n  deleteRecipe(index) {\n    this.recipes.splice(index, 1);\n    this.recipesChanged.next(this.recipes.slice());\n  }\n}\nRecipesService.ɵfac = function RecipesService_Factory(t) {\n  return new (t || RecipesService)(i0.ɵɵinject(i1.ShoppingListService));\n};\nRecipesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RecipesService,\n  factory: RecipesService.ɵfac\n});\nexport { RecipesService };","map":{"version":3,"names":["Recipes","Ingredients","Subject","RecipesService","constructor","serviceShopping","recipesChanged","recipes","getRecipes","slice","getIdRecipe","index","addIngredintToShoppingList","ingredients","addedShoppingList","addRecipe","recipe","push","next","updateRecipe","newRecipe","deleteRecipe","splice","i0","ɵɵinject","i1","ShoppingListService","factory","ɵfac"],"sources":["/Users/dayerlin.bustamante/Documents/DAY/cooking-app/src/app/recipes/recipes.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Recipes } from \"./recipes.model\";\nimport { Ingredients } from \"../shared/ingredients.model\";\nimport { ShoppingListService } from \"../shopping-list/shopping-list.service\";\nimport { Subject } from \"rxjs/Subject\";\n\n@Injectable()\nexport class RecipesService {\n\n    recipesChanged =  new Subject<Recipes[]>();\n\n    private recipes: Recipes[]= [\n        new Recipes('Burger Meat', 'this is burger with chips', 'https://bakeitwithlove.com/wp-content/uploads/2021/05/McDonalds-The-Travis-Scott-Burger-sq.jpg', [\n            new Ingredients('Meat', 1),\n            new Ingredients('Bread', 2)\n        ]),\n        new Recipes('Launch', 'The launch day', 'https://cdn.loveandlemons.com/wp-content/uploads/2020/03/pantry-recipes-2.jpg', [\n            new Ingredients('Salad', 2),\n            new Ingredients('Meat', 1),\n            new Ingredients('chips', 20)\n        ])\n    ];\n    \n    constructor(private serviceShopping: ShoppingListService){}\n\n    getRecipes(){\n        return this.recipes.slice();\n    }\n\n    getIdRecipe(index: number){\n        return this.recipes[index]\n    }\n\n    addIngredintToShoppingList(ingredients: Ingredients[]){\n        this.serviceShopping.addedShoppingList(ingredients)\n    }\n\n    addRecipe(recipe: Recipes){\n        this.recipes.push(recipe)\n        this.recipesChanged.next(this.recipes.slice())\n    }\n\n    updateRecipe(index: number, newRecipe:Recipes){\n        this.recipes[index] = newRecipe\n        this.recipesChanged.next(this.recipes.slice())\n    }\n\n    deleteRecipe(index: number){\n        this.recipes.splice(index, 1)\n        this.recipesChanged.next(this.recipes.slice())\n    }\n}"],"mappings":"AACA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAQ,6BAA6B;AAEzD,SAASC,OAAO,QAAQ,cAAc;;;AAEtC,MACaC,cAAc;EAgBvBC,YAAoBC,eAAoC;IAApC,KAAAA,eAAe,GAAfA,eAAe;IAdnC,KAAAC,cAAc,GAAI,IAAIJ,OAAO,EAAa;IAElC,KAAAK,OAAO,GAAa,CACxB,IAAIP,OAAO,CAAC,aAAa,EAAE,2BAA2B,EAAE,gGAAgG,EAAE,CACtJ,IAAIC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,EAC1B,IAAIA,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC,CAC9B,CAAC,EACF,IAAID,OAAO,CAAC,QAAQ,EAAE,gBAAgB,EAAE,+EAA+E,EAAE,CACrH,IAAIC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC,EAC3B,IAAIA,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,EAC1B,IAAIA,WAAW,CAAC,OAAO,EAAE,EAAE,CAAC,CAC/B,CAAC,CACL;EAEyD;EAE1DO,UAAUA,CAAA;IACN,OAAO,IAAI,CAACD,OAAO,CAACE,KAAK,EAAE;EAC/B;EAEAC,WAAWA,CAACC,KAAa;IACrB,OAAO,IAAI,CAACJ,OAAO,CAACI,KAAK,CAAC;EAC9B;EAEAC,0BAA0BA,CAACC,WAA0B;IACjD,IAAI,CAACR,eAAe,CAACS,iBAAiB,CAACD,WAAW,CAAC;EACvD;EAEAE,SAASA,CAACC,MAAe;IACrB,IAAI,CAACT,OAAO,CAACU,IAAI,CAACD,MAAM,CAAC;IACzB,IAAI,CAACV,cAAc,CAACY,IAAI,CAAC,IAAI,CAACX,OAAO,CAACE,KAAK,EAAE,CAAC;EAClD;EAEAU,YAAYA,CAACR,KAAa,EAAES,SAAiB;IACzC,IAAI,CAACb,OAAO,CAACI,KAAK,CAAC,GAAGS,SAAS;IAC/B,IAAI,CAACd,cAAc,CAACY,IAAI,CAAC,IAAI,CAACX,OAAO,CAACE,KAAK,EAAE,CAAC;EAClD;EAEAY,YAAYA,CAACV,KAAa;IACtB,IAAI,CAACJ,OAAO,CAACe,MAAM,CAACX,KAAK,EAAE,CAAC,CAAC;IAC7B,IAAI,CAACL,cAAc,CAACY,IAAI,CAAC,IAAI,CAACX,OAAO,CAACE,KAAK,EAAE,CAAC;EAClD;;AA3CSN,cAAc,C;mBAAdA,cAAc,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,mBAAA;AAAA;AAAdvB,cAAc,C;SAAdA,cAAc;EAAAwB,OAAA,EAAdxB,cAAc,CAAAyB;AAAA;SAAdzB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}